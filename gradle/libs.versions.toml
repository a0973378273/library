[versions]
agp = "8.6.1"
converterGson = "2.9.0"
kotlin = "2.0.21"
# Core
coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
# Lifecycle
lifecycleRuntimeKtx = "2.8.7"
# Compose
activityCompose = "1.9.3"
composeBom = "2024.11.00"
# Retrofit
loggingInterceptor = "4.9.3"
retrofit = "2.9.0"
retrofit2KotlinxSerializationConverter = "1.0.0"
# Koin
koin = "3.5.3"
koin-test = "3.4.0"
# Ktor
ktor = "2.3.10"
kotlinxSerialization = "1.9.0"
# Test
mockwebserver = "4.12.0"
kotlinx-coroutines-test = "1.7.3"
# MQTT
mqtt = "1.2.5"
mqtt-android = "4.3"
# Datastore
datastore = "1.1.2"

appcompat = "1.6.1"
material = "1.10.0"
navigationCompose = "2.8.5"
lifecycleViewmodelAndroid = "2.8.7"



[libraries]
# Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

# Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-android = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-android", version.ref = "lifecycleViewmodelAndroid" }

# Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }

# Koin
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

retrofit2-kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2KotlinxSerializationConverter" }
# Mock
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }

# MQTT
mqtt = { group = "org.eclipse.paho", name = "org.eclipse.paho.client.mqttv3", version.ref = "mqtt" }
mqtt-android = { group = "com.github.hannesa2", name = "paho.mqtt.android", version.ref = "mqtt-android" }

# Datastore
datastore = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }

# Test
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test" }
koin-test = { group = "io.insert-koin", name = "koin-test", version.ref = "koin-test" }
koin-test-junit5 = { group = "io.insert-koin", name = "koin-test-junit5", version.ref = "koin-test" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinxSerialization" }
android-library = { id = "com.android.library", version.ref = "agp" }

[bundles]
ktor-client = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-auth",
    "ktor-client-android",
    "ktor-client-content-negotiation",
    "ktor-client-logging",
    "ktor-serialization-json"
]
retrofit2 = [
    "retrofit",
    "retrofit2-kotlinx-serialization-converter",
    "logging-interceptor"
]
koin = [
    "koin-core",
    "koin-android",
    "koin-androidx-compose"
]
test = [
    "kotlinx-coroutines-test",
    "mockwebserver",
    "koin-test",
#    "koin-test-junit5",
    "junit",
    "androidx-junit"
]
compose = [
    "androidx-ui-graphics",
    "androidx-ui",
    "androidx-ui-tooling-preview",
    "androidx-material3",
    "androidx-activity-compose",
    "androidx-navigation-compose",
]
mqtt = [
    "mqtt",
    "mqtt-android",
]
datastore = [
    "datastore"
]